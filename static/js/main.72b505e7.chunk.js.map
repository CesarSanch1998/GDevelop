{"version":3,"sources":["Utils/StartupTimes.js","MainFrame/Preferences/PreferencesProvider.js","Utils/Analytics/Raven.js","serviceWorker.js","Utils/OptionalRequire.js","index.js","Utils/Window.js","Utils/GDevelopServices/ApiConfigs.js","Version/index.js","MainFrame/Preferences/PreferencesContext.js","Version/VersionMetadata.js","Utils/Analytics/EventSender.js","Utils/Analytics/UserUUID.js","UI/Messages/MessageBox.js","Utils/Platform.js","Utils/Analytics/LocalStats.js","Utils/GDevelopServices/Authentication.js","KeyboardShortcuts/DefaultShortcuts.js","Utils/LoadScript.js"],"names":["GD_STARTUP_TIMES","global","console","error","getStartupTimesSummary","previousStep","steps","map","step","stepSummary","stepName","time","elapsedTime","totalStartupTime","electron","optionalRequire","ipcRenderer","loadPreferencesFromLocalStorage","persistedState","localStorage","getItem","values","JSON","parse","key","initialPreferences","hasOwnProperty","e","PreferencesProvider","state","setLanguage","_setLanguage","bind","setThemeName","_setThemeName","setCodeEditorThemeName","_setCodeEditorThemeName","setAutoDownloadUpdates","_setAutoDownloadUpdates","checkUpdates","_checkUpdates","setAutoDisplayChangelog","_setAutoDisplayChangelog","showAlertMessage","_showAlertMessage","showAllAlertMessages","_showAllAlertMessages","showTutorialHint","_showTutorialHint","showAllTutorialHints","_showAllTutorialHints","verifyIfIsNewVersion","_verifyIfIsNewVersion","setEventsSheetShowObjectThumbnails","_setEventsSheetShowObjectThumbnails","setAutosaveOnPreview","_setAutosaveOnPreview","setUseNewInstructionEditorDialog","_setUseNewInstructionEditorDialog","setUseUndefinedVariablesInAutocompletion","_setUseUndefinedVariablesInAutocompletion","setUseGDJSDevelopmentWatcher","_setUseGDJSDevelopmentWatcher","setEventsSheetUseAssignmentOperators","_setEventsSheetUseAssignmentOperators","setEventsSheetZoomLevel","_setEventsSheetZoomLevel","setShowEffectParameterNames","_setShowEffectParameterNames","getLastUsedPath","_getLastUsedPath","setLastUsedPath","_setLastUsedPath","getDefaultEditorMosaicNode","_getDefaultEditorMosaicNode","setDefaultEditorMosaicNode","_setDefaultEditorMosaicNode","getRecentProjectFiles","_getRecentProjectFiles","insertRecentProjectFile","_insertRecentProjectFile","removeRecentProjectFile","_removeRecentProjectFile","getAutoOpenMostRecentProject","_getAutoOpenMostRecentProject","setAutoOpenMostRecentProject","_setAutoOpenMostRecentProject","hadProjectOpenedDuringLastSession","_hadProjectOpenedDuringLastSession","setHasProjectOpened","_setHasProjectOpened","setShortcutForCommand","_setShortcutForCommand","resetShortcutsToDefault","_resetShortcutsToDefault","getNewObjectDialogDefaultTab","_getNewObjectDialogDefaultTab","setNewObjectDialogDefaultTab","_setNewObjectDialogDefaultTab","getIsMenuBarHiddenInPreview","_getIsMenuBarHiddenInPreview","setIsMenuBarHiddenInPreview","_setIsMenuBarHiddenInPreview","setBackdropClickBehavior","_setBackdropClickBehavior","getIsAlwaysOnTopInPreview","_getIsAlwaysOnTopInPreview","setIsAlwaysOnTopInPreview","_setIsAlwaysOnTopInPreview","setEventsSheetCancelInlineParameter","_setEventsSheetCancelInlineParameter","setTimeout","language","this","setState","_persistValuesToLocalStorage","eventsSheetShowObjectThumbnails","autosaveOnPreview","useNewInstructionEditorDialog","useUndefinedVariablesInAutocompletion","useGDJSDevelopmentWatcher","eventsSheetUseAssignmentOperators","eventsSheetZoomLevel","showEffectParameterNames","themeName","codeEditorThemeName","autoDownloadUpdates","autoDisplayChangelog","eventsSheetCancelInlineParameter","forceDownload","disableCheckForUpdates","props","send","currentVersion","getIDEVersion","lastLaunchedVersion","undefined","identifier","show","hiddenAlertMessages","hiddenTutorialHints","preferences","setItem","stringify","warn","project","kind","projectPath","getProjectFile","projectPaths","projectLastUsedPaths","latestPath","newProjectLastUsedPaths","name","defaultEditorMosaicNodes","node","recentProjectFiles","recents","newRecentFile","_setRecentProjectFiles","filter","recentFile","slice","recentFileItem","autoOpenMostRecentProject","enabled","hasProjectOpened","userShortcutMap","commandName","shortcutString","setToDefault","defaultShortcuts","updatedShortcutMap","newObjectDialogDefaultTab","isMenuBarHiddenInPreview","backdropClickBehavior","isAlwaysOnTopInPreview","Provider","value","children","React","installRaven","Raven","config","release","getIDEVersionWithHash","install","setUserContext","id","getUserUUID","isLocalhost","Boolean","window","location","hostname","match","register","navigator","publicUrl","URL","process","href","origin","log","addEventListener","swUrl","fetch","headers","then","response","contentType","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","nodeRequire","require","module","exports","moduleName","rethrowException","ex","styles","loadingMessage","position","top","left","right","fontSize","fontFamily","color","textAlign","animation","Bootstrapper","App","authentication","Authentication","handleEditorLoadError","rawError","message","showErrorBox","errorId","installAnalyticsEvents","push","performance","now","loadScript","VersionMetadata","versionWithHash","initializeGDevelopJs","locateFile","path","prefix","gd","create","Error","Fragment","style","Component","rootElement","document","getElementById","ReactDOM","render","sendProgramOpening","shell","dialog","remote","POSITIONAL_ARGUMENTS_KEY","currentTitleBarColor","Window","title","getCurrentWindow","setTitle","err","newColor","metaElement","querySelector","setAttribute","x","y","width","height","scaleFactor","isWindows","rect","screen","getDisplayMatching","browserWindow","setBounds","Math","round","app","quit","showInactive","setAlwaysOnTop","forceHide","isFocused","hide","cb","on","getGlobal","argumentsObject","URLSearchParams","search","forEach","type","showMessageBoxSync","buttons","alert","confirm","buildEditorContextMenu","target","closest","menu","popup","preventDefault","url","openExternal","open","isDev","dev","GDevelopGamePreviews","baseUrl","GDevelopGamesPlatform","getInstantBuildUrl","buildId","getGameUrl","gameId","GDevelopBuildApi","GDevelopFirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","GDevelopUsageApi","GDevelopReleaseApi","GDevelopAssetApi","GDevelopAnalyticsApi","GDevelopGameApi","GDevelopUserApi","version","gdCoreVersionString","getGDCoreVersion","VersionWrapper","fullString","matchMedia","matches","zoomLevel","fileMetadata","shortcut","PreferencesContext","client","startupTimesSummary","isUserflowRunning","getProgramOpeningCount","isMobile","random","userflow","init","isRunning","userPreferences","userLanguage","identify","info","sessionCookie","Keen","utils","cookie","sessionTimer","timer","start","writeKey","extendEvents","firebaseUser","getFirebaseUserSync","user","uuid","uid","providerId","email","emailVerified","localStats","programOpeningCount","versionMetadata","page","referrer","tech","browser","helpers","getBrowserProfile","ip","ua","getDatetimeIndex","visitor","time_on_page","keen","timestamp","Date","toISOString","addons","input","output","ua_string","page_url","referrer_url","incrementProgramOpeningCount","recordEvent","sendExportLaunched","exportKind","platform","sendNewGameCreated","templateName","sendTutorialOpened","tutorialName","sendHelpFinderOpened","sendHelpSearch","searchText","sendErrorMessage","sendSignupDone","sendSubscriptionCheckDialogShown","mode","sendSubscriptionCheckDismiss","sendSubscriptionDialogShown","sendAssetOpened","sendAssetAddedToProject","sendNewObjectCreated","sendShowcaseGameLinkOpened","linkType","sendChoosePlanClicked","planId","sendExternalEditorOpened","editorName","trackInAppTutorialProgress","stepIndex","isCompleted","existingUserUUID","newUserUUID","generateUUID","a","toString","replace","showMessageBox","showWarningBox","options","delayToNextTick","doNotReport","_isWindows","windows","_isMacLike","_isMobile","test","userAgent","getUserAgent","getArch","arch","getSystemVersion","getPlatformName","isMacLike","count","parseInt","_onUserLogoutCallback","_onUserUpdateCallback","setOnUserLogoutCallback","setOnUserUpdateCallback","createFirebaseAccount","form","createUserWithEmailAndPassword","auth","password","userCredentials","sendEmailVerification","createUser","getAuthorizationHeader","authorizationHeader","currentUser","axios","post","username","params","userId","Authorization","login","signInWithEmailAndPassword","forgotPassword","sendPasswordResetEmail","getFirebaseUser","sendFirebaseEmailVerification","changeEmail","updateEmail","patch","getUserProfile","data","editUserProfile","description","getGameStatsEmail","acceptGameStatsEmail","logout","signOut","getIdToken","token","isAuthenticated","initializeApp","getAuth","onAuthStateChanged","QUIT_APP","OPEN_PROJECT_MANAGER","LAUNCH_NEW_PREVIEW","LAUNCH_DEBUG_PREVIEW","HOT_RELOAD_PREVIEW","LAUNCH_NETWORK_PREVIEW","OPEN_HOME_PAGE","CREATE_NEW_PROJECT","OPEN_PROJECT","SAVE_PROJECT","SAVE_PROJECT_AS","CLOSE_PROJECT","EXPORT_GAME","OPEN_RECENT_PROJECT","OPEN_COMMAND_PALETTE","OPEN_PROJECT_PROPERTIES","OPEN_PROJECT_LOADING_SCREEN","OPEN_PROJECT_VARIABLES","OPEN_PLATFORM_SPECIFIC_ASSETS_DIALOG","OPEN_PROJECT_RESOURCES","OPEN_LAYOUT","OPEN_EXTERNAL_EVENTS","OPEN_EXTERNAL_LAYOUT","OPEN_EXTENSION","OPEN_SCENE_PROPERTIES","OPEN_SCENE_VARIABLES","OPEN_OBJECTS_PANEL","OPEN_OBJECT_GROUPS_PANEL","OPEN_PROPERTIES_PANEL","TOGGLE_INSTANCES_PANEL","TOGGLE_LAYERS_PANEL","TOGGLE_WINDOW_MASK","TOGGLE_GRID","OPEN_SETUP_GRID","EDIT_LAYER_EFFECTS","EDIT_LAYER","EDIT_OBJECT","EDIT_OBJECT_VARIABLES","EDIT_OBJECT_GROUP","ADD_STANDARD_EVENT","ADD_SUBEVENT","ADD_COMMENT_EVENT","CHOOSE_AND_ADD_EVENT","OPEN_EXTENSION_SETTINGS","source","Promise","resolve","reject","body","scriptElement","createElement","src","onload","onerror","onabort","appendChild"],"mappings":"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","file":"static/js/main.72b505e7.chunk.js","sourcesContent":["// @flow\ntype RawStepMeasure = [string, number];\ntype SummarizedStep = {|\n  stepName: string,\n  time: number,\n  elapsedTime: number,\n|};\ntype Summary = {|\n  totalStartupTime: number,\n  steps: Array<SummarizedStep>,\n|};\n\nexport const GD_STARTUP_TIMES: Array<RawStepMeasure> = global.GD_STARTUP_TIMES;\n\nif (!GD_STARTUP_TIMES) {\n  console.error(\n    'Could not find GD_STARTUP_TIMES array. Have you declared it in index.html, in a synchronous script?'\n  );\n}\n\nexport const getStartupTimesSummary = (): Summary => {\n  let previousStep = ['<init>', 0];\n\n  let steps = GD_STARTUP_TIMES.map(step => {\n    const stepSummary = {\n      stepName: step[0],\n      time: step[1],\n      elapsedTime: step[1] - previousStep[1],\n    };\n\n    previousStep = step;\n    return stepSummary;\n  });\n\n  return {\n    steps,\n    totalStartupTime: previousStep[1],\n  };\n};\n","// @flow\n\nimport * as React from 'react';\nimport PreferencesContext, {\n  initialPreferences,\n  type Preferences,\n  type AlertMessageIdentifier,\n} from './PreferencesContext';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport { getIDEVersion } from '../../Version';\nimport {\n  type PreferencesValues,\n  type EditorMosaicName,\n} from './PreferencesContext';\nimport type { ResourceKind } from '../../ResourcesList/ResourceSource';\nimport { type EditorMosaicNode } from '../../UI/EditorMosaic';\nimport { type FileMetadataAndStorageProviderName } from '../../ProjectsStorage';\nimport defaultShortcuts from '../../KeyboardShortcuts/DefaultShortcuts';\nimport { type CommandName } from '../../CommandPalette/CommandsList';\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\n\ntype Props = {|\n  children: React.Node,\n  disableCheckForUpdates: boolean,\n|};\n\ntype State = Preferences;\n\nconst LocalStorageItem = 'gd-preferences';\nconst MAX_RECENT_FILES_COUNT = 20;\n\nexport const loadPreferencesFromLocalStorage = (): ?PreferencesValues => {\n  try {\n    const persistedState = localStorage.getItem(LocalStorageItem);\n    if (!persistedState) return null;\n\n    const values = JSON.parse(persistedState);\n\n    // \"Migrate\" non existing properties to their default values\n    // (useful when upgrading the preferences to a new version where\n    // a new preference was added).\n    for (const key in initialPreferences.values) {\n      if (\n        initialPreferences.values.hasOwnProperty(key) &&\n        typeof values[key] === 'undefined'\n      ) {\n        values[key] = initialPreferences.values[key];\n      }\n    }\n\n    return values;\n  } catch (e) {\n    return null;\n  }\n};\n\nexport default class PreferencesProvider extends React.Component<Props, State> {\n  state = {\n    values: loadPreferencesFromLocalStorage() || initialPreferences.values,\n    setLanguage: this._setLanguage.bind(this),\n    setThemeName: this._setThemeName.bind(this),\n    setCodeEditorThemeName: this._setCodeEditorThemeName.bind(this),\n    setAutoDownloadUpdates: this._setAutoDownloadUpdates.bind(this),\n    checkUpdates: this._checkUpdates.bind(this),\n    setAutoDisplayChangelog: this._setAutoDisplayChangelog.bind(this),\n    showAlertMessage: this._showAlertMessage.bind(this),\n    showAllAlertMessages: this._showAllAlertMessages.bind(this),\n    showTutorialHint: this._showTutorialHint.bind(this),\n    showAllTutorialHints: this._showAllTutorialHints.bind(this),\n    verifyIfIsNewVersion: this._verifyIfIsNewVersion.bind(this),\n    setEventsSheetShowObjectThumbnails: this._setEventsSheetShowObjectThumbnails.bind(\n      this\n    ),\n    setAutosaveOnPreview: this._setAutosaveOnPreview.bind(this),\n    setUseNewInstructionEditorDialog: this._setUseNewInstructionEditorDialog.bind(\n      this\n    ),\n    setUseUndefinedVariablesInAutocompletion: this._setUseUndefinedVariablesInAutocompletion.bind(\n      this\n    ),\n    setUseGDJSDevelopmentWatcher: this._setUseGDJSDevelopmentWatcher.bind(this),\n    setEventsSheetUseAssignmentOperators: this._setEventsSheetUseAssignmentOperators.bind(\n      this\n    ),\n    setEventsSheetZoomLevel: this._setEventsSheetZoomLevel.bind(this),\n    setShowEffectParameterNames: this._setShowEffectParameterNames.bind(this),\n    getLastUsedPath: this._getLastUsedPath.bind(this),\n    setLastUsedPath: this._setLastUsedPath.bind(this),\n    getDefaultEditorMosaicNode: this._getDefaultEditorMosaicNode.bind(this),\n    setDefaultEditorMosaicNode: this._setDefaultEditorMosaicNode.bind(this),\n    getRecentProjectFiles: this._getRecentProjectFiles.bind(this),\n    insertRecentProjectFile: this._insertRecentProjectFile.bind(this),\n    removeRecentProjectFile: this._removeRecentProjectFile.bind(this),\n    getAutoOpenMostRecentProject: this._getAutoOpenMostRecentProject.bind(this),\n    setAutoOpenMostRecentProject: this._setAutoOpenMostRecentProject.bind(this),\n    hadProjectOpenedDuringLastSession: this._hadProjectOpenedDuringLastSession.bind(\n      this\n    ),\n    setHasProjectOpened: this._setHasProjectOpened.bind(this),\n    setShortcutForCommand: this._setShortcutForCommand.bind(this),\n    resetShortcutsToDefault: this._resetShortcutsToDefault.bind(this),\n    getNewObjectDialogDefaultTab: this._getNewObjectDialogDefaultTab.bind(this),\n    setNewObjectDialogDefaultTab: this._setNewObjectDialogDefaultTab.bind(this),\n    getIsMenuBarHiddenInPreview: this._getIsMenuBarHiddenInPreview.bind(this),\n    setIsMenuBarHiddenInPreview: this._setIsMenuBarHiddenInPreview.bind(this),\n    setBackdropClickBehavior: this._setBackdropClickBehavior.bind(this),\n    getIsAlwaysOnTopInPreview: this._getIsAlwaysOnTopInPreview.bind(this),\n    setIsAlwaysOnTopInPreview: this._setIsAlwaysOnTopInPreview.bind(this),\n    setEventsSheetCancelInlineParameter: this._setEventsSheetCancelInlineParameter.bind(\n      this\n    ),\n  };\n\n  componentDidMount() {\n    setTimeout(() => this._checkUpdates(), 10000);\n  }\n\n  _setLanguage(language: string) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          language,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setEventsSheetShowObjectThumbnails(\n    eventsSheetShowObjectThumbnails: boolean\n  ) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          eventsSheetShowObjectThumbnails,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setAutosaveOnPreview(autosaveOnPreview: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          autosaveOnPreview,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setUseNewInstructionEditorDialog(useNewInstructionEditorDialog: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          useNewInstructionEditorDialog,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setUseUndefinedVariablesInAutocompletion(\n    useUndefinedVariablesInAutocompletion: boolean\n  ) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          useUndefinedVariablesInAutocompletion,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setUseGDJSDevelopmentWatcher(useGDJSDevelopmentWatcher: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          useGDJSDevelopmentWatcher,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setEventsSheetUseAssignmentOperators(\n    eventsSheetUseAssignmentOperators: boolean\n  ) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          eventsSheetUseAssignmentOperators,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setEventsSheetZoomLevel(eventsSheetZoomLevel: number) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          eventsSheetZoomLevel,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setShowEffectParameterNames(showEffectParameterNames: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          showEffectParameterNames,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setThemeName(themeName: string) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          themeName,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setCodeEditorThemeName(codeEditorThemeName: string) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          codeEditorThemeName,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setAutoDownloadUpdates(autoDownloadUpdates: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          autoDownloadUpdates,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setAutoDisplayChangelog(autoDisplayChangelog: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          autoDisplayChangelog,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setEventsSheetCancelInlineParameter(\n    eventsSheetCancelInlineParameter: 'apply' | 'cancel'\n  ) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          eventsSheetCancelInlineParameter,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _checkUpdates(forceDownload?: boolean) {\n    // Checking for updates is only done on Electron.\n    // Note: This could be abstracted away later if other updates mechanisms\n    // should be supported.\n    const { disableCheckForUpdates } = this.props;\n    if (!ipcRenderer || disableCheckForUpdates) return;\n\n    if (!!forceDownload || this.state.values.autoDownloadUpdates) {\n      ipcRenderer.send('updates-check-and-download');\n    } else {\n      ipcRenderer.send('updates-check');\n    }\n  }\n\n  _verifyIfIsNewVersion() {\n    const currentVersion = getIDEVersion();\n    const { lastLaunchedVersion } = this.state.values;\n    if (lastLaunchedVersion === currentVersion) {\n      // This is not a new version\n      return false;\n    }\n\n    // This is a new version: store the version number\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          lastLaunchedVersion: currentVersion,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n\n    if (lastLaunchedVersion === undefined) {\n      // This is the first time GDevelop is launched, don't\n      // warn about this version being new.\n      return false;\n    }\n\n    return true;\n  }\n\n  _showAlertMessage(identifier: AlertMessageIdentifier, show: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          hiddenAlertMessages: {\n            ...state.values.hiddenAlertMessages,\n            // $FlowFixMe - Flow won't typecheck this because of https://medium.com/flow-type/spreads-common-errors-fixes-9701012e9d58\n            [identifier]: !show,\n          },\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _showAllAlertMessages() {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          hiddenAlertMessages: {},\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _showTutorialHint(identifier: string, show: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          hiddenTutorialHints: {\n            ...state.values.hiddenTutorialHints,\n            [identifier]: !show,\n          },\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _showAllTutorialHints() {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          hiddenTutorialHints: {},\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _persistValuesToLocalStorage(preferences: Preferences) {\n    try {\n      localStorage.setItem(\n        LocalStorageItem,\n        JSON.stringify(preferences.values)\n      );\n    } catch (e) {\n      console.warn('Unable to persist preferences', e);\n    }\n\n    return preferences;\n  }\n\n  _getLastUsedPath(project: gdProject, kind: ResourceKind) {\n    const projectPath = project.getProjectFile();\n    const { values } = this.state;\n    const projectPaths = values.projectLastUsedPaths[projectPath];\n    if (projectPaths && projectPaths[kind]) {\n      return projectPaths[kind];\n    }\n    if (!projectPath) return null;\n  }\n\n  _setLastUsedPath(project: gdProject, kind: ResourceKind, latestPath: string) {\n    const projectPath = project.getProjectFile();\n\n    const { values } = this.state;\n    const newProjectLastUsedPaths =\n      values.projectLastUsedPaths[projectPath] || {};\n    newProjectLastUsedPaths[kind] = latestPath;\n\n    this.setState(\n      {\n        values: {\n          ...values,\n          projectLastUsedPaths: {\n            ...values.projectLastUsedPaths,\n            [projectPath]: newProjectLastUsedPaths,\n          },\n        },\n      },\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _getDefaultEditorMosaicNode(name: EditorMosaicName) {\n    return this.state.values.defaultEditorMosaicNodes[name] || null;\n  }\n\n  _setDefaultEditorMosaicNode(name: EditorMosaicName, node: ?EditorMosaicNode) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          defaultEditorMosaicNodes: {\n            ...state.values.defaultEditorMosaicNodes,\n            // $FlowFixMe - Flow errors on unions in computed properties\n            [name]: node,\n          },\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _getRecentProjectFiles() {\n    return this.state.values.recentProjectFiles;\n  }\n\n  _setRecentProjectFiles(recents: Array<FileMetadataAndStorageProviderName>) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          recentProjectFiles: recents,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _insertRecentProjectFile(newRecentFile: FileMetadataAndStorageProviderName) {\n    let recentProjectFiles = this._getRecentProjectFiles();\n    const isNotNewRecentFile = recentFile =>\n      JSON.stringify(recentFile) !== JSON.stringify(newRecentFile);\n    this._setRecentProjectFiles(\n      [newRecentFile, ...recentProjectFiles.filter(isNotNewRecentFile)].slice(\n        0,\n        MAX_RECENT_FILES_COUNT\n      )\n    );\n  }\n\n  _removeRecentProjectFile(recentFile: FileMetadataAndStorageProviderName) {\n    const isNotSadPathRecentFile = recentFileItem =>\n      JSON.stringify(recentFileItem) !== JSON.stringify(recentFile);\n    this._setRecentProjectFiles(\n      [...this._getRecentProjectFiles().filter(isNotSadPathRecentFile)].slice(\n        0,\n        MAX_RECENT_FILES_COUNT\n      )\n    );\n  }\n\n  _getAutoOpenMostRecentProject() {\n    return this.state.values.autoOpenMostRecentProject;\n  }\n\n  _setAutoOpenMostRecentProject(enabled: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          autoOpenMostRecentProject: enabled,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _hadProjectOpenedDuringLastSession() {\n    return this.state.values.hasProjectOpened;\n  }\n\n  _setHasProjectOpened(enabled: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          hasProjectOpened: enabled,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _resetShortcutsToDefault() {\n    this.setState(\n      state => ({\n        values: { ...state.values, userShortcutMap: {} },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setShortcutForCommand(commandName: CommandName, shortcutString: string) {\n    const defaultShortcut = defaultShortcuts[commandName] || '';\n    const setToDefault = defaultShortcut === shortcutString;\n\n    const updatedShortcutMap = { ...this.state.values.userShortcutMap };\n    if (setToDefault) delete updatedShortcutMap[commandName];\n    else updatedShortcutMap[commandName] = shortcutString;\n\n    this.setState(\n      state => ({\n        values: { ...state.values, userShortcutMap: updatedShortcutMap },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _getNewObjectDialogDefaultTab() {\n    return this.state.values.newObjectDialogDefaultTab;\n  }\n\n  _setNewObjectDialogDefaultTab(\n    newObjectDialogDefaultTab: 'asset-store' | 'new-object'\n  ) {\n    this.setState(\n      state => ({\n        values: { ...state.values, newObjectDialogDefaultTab },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _getIsMenuBarHiddenInPreview() {\n    return this.state.values.isMenuBarHiddenInPreview;\n  }\n\n  _setIsMenuBarHiddenInPreview(enabled: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          isMenuBarHiddenInPreview: enabled,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setBackdropClickBehavior(\n    backdropClickBehavior: 'nothing' | 'apply' | 'cancel'\n  ) {\n    this.setState(\n      state => ({\n        values: { ...state.values, backdropClickBehavior },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _getIsAlwaysOnTopInPreview() {\n    return this.state.values.isAlwaysOnTopInPreview;\n  }\n\n  _setIsAlwaysOnTopInPreview(enabled: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          isAlwaysOnTopInPreview: enabled,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  render() {\n    return (\n      <PreferencesContext.Provider value={this.state}>\n        {this.props.children}\n      </PreferencesContext.Provider>\n    );\n  }\n}\n","import Raven from 'raven-js';\nimport { getUserUUID } from './UserUUID';\nimport { getIDEVersionWithHash } from '../../Version';\nconst isDev = process.env.NODE_ENV === 'development';\n\nexport const installRaven = () => {\n  if (isDev) return;\n\n  Raven.config('https://e10c176ee68f432199cd292ba181e03b@sentry.io/233519', {\n    release: getIDEVersionWithHash(),\n  })\n    .install()\n    .setUserContext({\n      id: getUserUUID(),\n    });\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nconst PUBLIC_URL = process.env.PUBLIC_URL;\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      console.log(\n        `The origin in PUBLIC_URL (${\n          publicUrl.origin\n        }) is different than the current origin (${\n          window.location.origin\n        }) - Service Worker disabled`\n      );\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  } else {\n    console.log(\n      'Development build (or unsupported browser) - Service Worker disabled'\n    );\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Note: this file don't use export/imports to allow its usage from Node.js\nconst nodeRequire = require('node-require-function')(); //TODO\n\n/**\n * Allow to require a Node.js/npm module without having it bundled by webpack.\n * This means that this module will only be available when running on Electron or Node.js.\n * When running without Electron or Node.js, `null` will be returned.\n *\n * Note: **in most cases**, prefer `optionalLazyRequire` to avoid loading too many modules\n * at the app startup. Only use optionalRequire for \"well-known\" Node.js modules (fs, path...)\n *\n * @param {string} moduleName The name of the module. For example: `fs`.\n */\nconst optionalRequire = (\n  moduleName,\n  config = {\n    rethrowException: false,\n  }\n) => {\n  try {\n    if (global.require) {\n      // Electron will expose require on global object. Use it, with an\n      // expression to avoid webpack to try to bundle the call to require.\n      return global['require'](moduleName);\n    } else if (nodeRequire) {\n      //Node.js\n      // nodeRequire is Node.js' require function that is properly extracted\n      // by node-require-function when running on Node.js\n      return nodeRequire(moduleName);\n    }\n\n    // We don't have Electron require nor Node.js require (we must be in a browser)\n    return null;\n  } catch (ex) {\n    if (config.rethrowException) throw ex;\n\n    return null;\n  }\n};\n\nmodule.exports = optionalRequire;\n","// @flow\nimport 'element-closest';\nimport React, { Component, type Element } from 'react';\nimport ReactDOM from 'react-dom';\nimport Authentication from './Utils/GDevelopServices/Authentication';\nimport {\n  sendProgramOpening,\n  installAnalyticsEvents,\n} from './Utils/Analytics/EventSender';\nimport { installRaven } from './Utils/Analytics/Raven';\nimport { register } from './serviceWorker';\nimport './UI/icomoon-font.css'; // Styles for Icomoon font.\nimport optionalRequire from './Utils/OptionalRequire.js';\nimport { loadScript } from './Utils/LoadScript.js';\nimport { showErrorBox } from './UI/Messages/MessageBox';\nimport VersionMetadata from './Version/VersionMetadata';\n\nconst GD_STARTUP_TIMES = global.GD_STARTUP_TIMES || [];\n\n// No i18n in this file\n\nconst electron = optionalRequire('electron');\n\nconst styles = {\n  loadingMessage: {\n    position: 'absolute',\n    top: 'calc(50% + 80px)',\n    left: 15,\n    right: 15,\n    fontSize: 20,\n    fontFamily: 'sans-serif',\n    color: 'darkgray',\n    textAlign: 'center',\n    animation:\n      'text-focus-in 0.5s cubic-bezier(0.215, 0.610, 0.355, 1.000) both',\n  },\n};\n\ntype State = {|\n  loadingMessage: string,\n  App: ?Element<*>,\n|};\n\nclass Bootstrapper extends Component<{}, State> {\n  state = {\n    loadingMessage: 'Loading the editor...',\n    App: null,\n  };\n  authentication = new Authentication();\n\n  componentDidMount() {\n    installAnalyticsEvents(this.authentication);\n    installRaven();\n    GD_STARTUP_TIMES.push(['bootstrapperComponentDidMount', performance.now()]);\n\n    // Load GDevelop.js, ensuring a new version is fetched when the version changes.\n    loadScript(\n      `./libGD.js?cache-buster=${VersionMetadata.versionWithHash}`\n    ).then(() => {\n      GD_STARTUP_TIMES.push(['libGDLoadedTime', performance.now()]);\n      const initializeGDevelopJs = global.initializeGDevelopJs;\n      if (!initializeGDevelopJs) {\n        this.handleEditorLoadError(\n          new Error('Missing initializeGDevelopJs in libGD.js')\n        );\n        return;\n      }\n\n      initializeGDevelopJs({\n        // Override the resolved URL for the .wasm file,\n        // to ensure a new version is fetched when the version changes.\n        locateFile: (path: string, prefix: string) => {\n          return (\n            prefix + path + `?cache-buster=${VersionMetadata.versionWithHash}`\n          );\n        },\n      }).then(gd => {\n        global.gd = gd;\n        GD_STARTUP_TIMES.push([\n          'libGD.js initialization done',\n          performance.now(),\n        ]);\n\n        if (electron) {\n          import(/* webpackChunkName: \"local-app\" */ './LocalApp')\n            .then(module =>\n              this.setState({\n                App: module.create(this.authentication),\n                loadingMessage: '',\n              })\n            )\n            .catch(this.handleEditorLoadError);\n        } else {\n          import(/* webpackChunkName: \"browser-app\" */ './BrowserApp')\n            .then(module =>\n              this.setState({\n                App: module.create(this.authentication),\n                loadingMessage: '',\n              })\n            )\n            .catch(this.handleEditorLoadError);\n        }\n      });\n    }, this.handleEditorLoadError);\n  }\n\n  handleEditorLoadError = rawError => {\n    const message = !electron\n      ? 'Please check your internet connectivity, close the tab and reopen it.'\n      : 'Please restart the application or reinstall the latest version if the problem persists.';\n\n    this.setState({\n      loadingMessage: `Unable to load GDevelop. ${message}`,\n    });\n    showErrorBox({\n      message: `Unable to load GDevelop. ${message}`,\n      rawError,\n      errorId: 'editor-load-error',\n    });\n  };\n\n  render() {\n    const { App, loadingMessage } = this.state;\n\n    return (\n      <React.Fragment>\n        {App}\n        {loadingMessage && (\n          <div style={styles.loadingMessage}>{loadingMessage}</div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst rootElement = document.getElementById('root');\nif (rootElement) {\n  GD_STARTUP_TIMES.push(['reactDOMRenderCall', performance.now()]);\n  ReactDOM.render(<Bootstrapper />, rootElement);\n} else console.error('No root element defined in index.html');\n\n// registerServiceWorker();\nregister();\nsendProgramOpening();\n","// @flow\n\nimport optionalRequire from './OptionalRequire.js';\nimport URLSearchParams from 'url-search-params';\nimport { isWindows } from './Platform';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\nconst dialog = electron ? electron.remote.dialog : null;\n\nexport type AppArguments = { [string]: any };\n\n/**\n * The name of the key, in AppArguments, containing the array of\n * positional arguments (i.e: `[\"file1\", \"file2\"]` in `ls file1 file2`).\n */\nexport const POSITIONAL_ARGUMENTS_KEY = '_';\n\nlet currentTitleBarColor: ?string = null;\n\n/**\n * Various utilities related to the app window management.\n */\nexport default class Window {\n  static setTitle(title: string) {\n    if (electron) {\n      try {\n        const browserWindow = electron.remote.getCurrentWindow();\n        browserWindow.setTitle(title);\n      } catch (err) {\n        // This rarely, but sometimes happen that setTitle throw.\n        // Catch the error in the hope that things will continue to work.\n        console.error(\n          'Caught an error while calling browserWindow.setTitle',\n          err\n        );\n      }\n    } else {\n      document.title = title;\n    }\n  }\n\n  static setTitleBarColor(newColor: string) {\n    if (electron) {\n      // Nothing to do, the title bar is using the system window management.\n      return;\n    }\n\n    if (currentTitleBarColor === newColor) {\n      // Avoid potentially expensive DOM query/modification if no changes needed.\n      return;\n    }\n\n    const metaElement = document.querySelector('meta[name=\"theme-color\"]');\n    if (metaElement) {\n      metaElement.setAttribute('content', newColor);\n      currentTitleBarColor = newColor;\n    }\n  }\n\n  static setBounds(x: number, y: number, width: number, height: number) {\n    if (!electron) return;\n\n    let scaleFactor = 1;\n    if (isWindows()) {\n      // setBounds need to be called with the scale factor of the screen\n      // on Windows.\n      const rect = { x, y, width, height };\n      const display = electron.remote.screen.getDisplayMatching(rect);\n      scaleFactor = display.scaleFactor;\n    }\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    try {\n      browserWindow.setBounds({\n        x: Math.round(x / scaleFactor),\n        y: Math.round(y / scaleFactor),\n        width: Math.round(width / scaleFactor),\n        height: Math.round(height / scaleFactor),\n      });\n    } catch (err) {\n      console.warn('Unable to change window bounds', err);\n    }\n    this.show();\n  }\n\n  static quit() {\n    if (!electron) return;\n\n    const electronApp = electron.remote.app;\n    electronApp.quit();\n  }\n\n  static show() {\n    if (!electron) return;\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    browserWindow.showInactive();\n    browserWindow.setAlwaysOnTop(true);\n  }\n\n  static hide(forceHide: boolean = false) {\n    if (!electron) return;\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    if (!browserWindow.isFocused() || forceHide) {\n      browserWindow.setAlwaysOnTop(false);\n      browserWindow.hide();\n    }\n  }\n\n  static onFocus(cb: () => void) {\n    if (!electron) return;\n\n    return electron.remote.getCurrentWindow().on('focus', cb);\n  }\n\n  static onBlur(cb: () => void) {\n    if (!electron) return;\n\n    return electron.remote.getCurrentWindow().on('blur', cb);\n  }\n\n  static onClose(cb: () => void) {\n    if (!electron) return;\n\n    return electron.remote.getCurrentWindow().on('close', cb);\n  }\n\n  /**\n   * Return the arguments passed to the IDE, either from Electron\n   * or from the web-app URL. The resulting object will have a key \"_\"\n   * containing an array of string, representing all the arguments that\n   * didn't have an option associated with them (see https://github.com/substack/minimist).\n   * (On the web-app, this is emulated using the \"project\" argument).\n   */\n  static getArguments(): AppArguments {\n    if (electron) {\n      return electron.remote.getGlobal('args');\n    }\n\n    const argumentsObject = {};\n    const params = new URLSearchParams(window.location.search);\n    params.forEach((value, name) => (argumentsObject[name] = value));\n\n    // Emulate the minimist behavior of putting the positional arguments\n    // in \"_\".\n    argumentsObject[POSITIONAL_ARGUMENTS_KEY] = argumentsObject.project\n      ? [argumentsObject.project]\n      : [];\n\n    return argumentsObject;\n  }\n\n  static showMessageBox(\n    message: string,\n    type?: 'none' | 'info' | 'error' | 'question' | 'warning'\n  ) {\n    if (!dialog || !electron) {\n      alert(message);\n      return;\n    }\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    dialog.showMessageBoxSync(browserWindow, {\n      message,\n      type,\n      buttons: ['OK'],\n    });\n  }\n\n  static showConfirmDialog(\n    message: string,\n    type?: 'none' | 'info' | 'error' | 'question' | 'warning'\n  ) {\n    if (!dialog || !electron) {\n      // eslint-disable-next-line\n      return confirm(message);\n    }\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    const answer = dialog.showMessageBoxSync(browserWindow, {\n      message,\n      type,\n      buttons: ['OK', 'Cancel'],\n    });\n    return answer === 0;\n  }\n\n  static setUpContextMenu() {\n    const textEditorSelectors = 'textarea, input, [contenteditable=\"true\"]';\n\n    if (electron) {\n      // `remote.require` since `Menu` is a main-process module.\n      var buildEditorContextMenu = electron.remote.require(\n        'electron-editor-context-menu'\n      );\n\n      window.addEventListener('contextmenu', function(e) {\n        // Only show the context menu in text editors.\n        if (!e.target.closest(textEditorSelectors)) return;\n\n        var menu = buildEditorContextMenu();\n\n        // The 'contextmenu' event is emitted after 'selectionchange' has fired but possibly before the\n        // visible selection has changed. Try to wait to show the menu until after that, otherwise the\n        // visible selection will update after the menu dismisses and look weird.\n        setTimeout(function() {\n          menu.popup({ window: electron.remote.getCurrentWindow() });\n        }, 30);\n      });\n    } else if (document) {\n      document.addEventListener('contextmenu', function(e: any) {\n        // Only show the context menu in text editors.\n        if (!e.target.closest(textEditorSelectors)) {\n          e.preventDefault();\n          return false;\n        }\n\n        return true;\n      });\n    }\n  }\n\n  static openExternalURL(url: string) {\n    if (!url) return;\n\n    if (electron) {\n      if (shell) shell.openExternal(url);\n      return;\n    }\n\n    window.open(url, '_blank');\n  }\n\n  static hasMainMenu() {\n    return !!electron;\n  }\n\n  static isDev(): boolean {\n    if (!electron)\n      return !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\n\n    try {\n      const isDev = electron.remote.require('electron-is').dev();\n      return isDev;\n    } catch (err) {\n      // This rarely, but sometimes happen that require throw (\"missing remote object\").\n      // Catch the error in the hope that things will continue to work.\n      console.error(\n        \"Caught an error while calling electron.remote.require('electron-is').dev\",\n        err\n      );\n      return false; // Assume we're not in development mode. Might be incorrect but better not consider production as development.\n    }\n  }\n}\n","// @flow\nconst isDev = process.env.NODE_ENV === 'development';\n\nexport const GDevelopGamePreviews = {\n  baseUrl: `https://game-previews.gdevelop-app.com/`,\n};\n\nexport const GDevelopGamesPlatform = {\n  getInstantBuildUrl: (buildId: string) =>\n    isDev\n      ? `https://liluo.io/instant-builds/${buildId}?dev=true`\n      : `https://liluo.io/instant-builds/${buildId}`,\n  getGameUrl: (gameId: string) =>\n    isDev\n      ? `https://liluo.io/games/${gameId}?dev=true`\n      : `https://liluo.io/games/${gameId}`,\n};\n\nexport const GDevelopBuildApi = {\n  baseUrl: isDev\n    ? 'https://69p4m07edd.execute-api.us-east-1.amazonaws.com/dev'\n    : 'https://api.gdevelop-app.com/build',\n};\n\nexport const GDevelopFirebaseConfig = {\n  apiKey: 'AIzaSyAnX9QMacrIl3yo4zkVFEVhDppGVDDewBc',\n  authDomain: 'gdevelop-services.firebaseapp.com',\n  databaseURL: 'https://gdevelop-services.firebaseio.com',\n  projectId: 'gdevelop-services',\n  storageBucket: 'gdevelop-services.appspot.com',\n  messagingSenderId: '44882707384',\n};\n\nexport const GDevelopUsageApi = {\n  baseUrl: isDev\n    ? 'https://dwjjhr5k76.execute-api.us-east-1.amazonaws.com/dev'\n    : 'https://api.gdevelop-app.com/usage',\n};\n\nexport const GDevelopReleaseApi = {\n  baseUrl: isDev\n    ? 'https://c8cldf4iqh.execute-api.us-east-1.amazonaws.com/dev'\n    : 'https://api.gdevelop-app.com/release',\n};\n\nexport const GDevelopAssetApi = {\n  baseUrl: isDev\n    ? 'https://57l4cj31aj.execute-api.us-east-1.amazonaws.com/dev'\n    : 'https://api.gdevelop-app.com/asset',\n};\n\nexport const GDevelopAnalyticsApi = {\n  baseUrl: isDev\n    ? 'https://fixpe96o0h.execute-api.us-east-1.amazonaws.com/dev'\n    : 'https://api.gdevelop-app.com/analytics',\n};\n\nexport const GDevelopGameApi = {\n  baseUrl: isDev\n    ? 'https://we7eqjifc2.execute-api.us-east-1.amazonaws.com/dev'\n    : 'https://api.gdevelop-app.com/game',\n};\n\nexport const GDevelopUserApi = {\n  baseUrl: isDev\n    ? 'https://yrun9q6udj.execute-api.us-east-1.amazonaws.com/dev'\n    : 'https://api.gdevelop-app.com/user',\n};\n","// @flow\nimport VersionMetadata from './VersionMetadata';\n\nexport const getIDEVersion = (): string => VersionMetadata.version;\nexport const getIDEVersionWithHash = (): string =>\n  VersionMetadata.versionWithHash;\n\nlet gdCoreVersionString = '';\nexport const getGDCoreVersion = (): string => {\n  if (gdCoreVersionString) return gdCoreVersionString;\n\n  const gd: libGDevelop = global.gd;\n  gdCoreVersionString = gd ? gd.VersionWrapper.fullString() : 'Unknown';\n  return gdCoreVersionString;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport type { ResourceKind } from '../../ResourcesList/ResourceSource';\nimport { type EditorMosaicNode } from '../../UI/EditorMosaic';\nimport { type FileMetadataAndStorageProviderName } from '../../ProjectsStorage';\nimport { type ShortcutMap } from '../../KeyboardShortcuts/DefaultShortcuts';\nimport { type CommandName } from '../../CommandPalette/CommandsList';\nimport optionalRequire from '../../Utils/OptionalRequire';\nconst electron = optionalRequire('electron');\n\nexport type AlertMessageIdentifier =\n  | 'default-additional-work'\n  | 'automatic-lighting-layer'\n  | 'object-moved-in-lighting-layer'\n  | 'use-non-smoothed-textures'\n  | 'use-nearest-scale-mode'\n  | 'maximum-fps-too-low'\n  | 'minimum-fps-too-low'\n  | 'function-extractor-explanation'\n  | 'events-based-behavior-explanation'\n  | 'empty-events-based-behavior-explanation'\n  | 'too-much-effects'\n  | 'effects-usage'\n  | 'lighting-layer-usage'\n  | 'resource-properties-panel-explanation'\n  | 'instance-drag-n-drop-explanation'\n  | 'objects-panel-explanation'\n  | 'instance-properties-panel-explanation'\n  | 'layers-panel-explanation'\n  | 'instances-panel-explanation'\n  | 'physics2-shape-collisions'\n  | 'edit-instruction-explanation'\n  | 'lifecycle-events-function-included-only-if-extension-used'\n  | 'p2p-broker-recommendation'\n  | 'command-palette-shortcut'\n  | 'asset-installed-explanation'\n  | 'extension-installed-explanation'\n  | 'project-should-have-unique-package-name';\n\nexport type EditorMosaicName =\n  | 'scene-editor'\n  | 'scene-editor-small'\n  | 'debugger'\n  | 'resources-editor'\n  | 'events-functions-extension-editor';\n\nexport const allAlertMessages: Array<{\n  key: AlertMessageIdentifier,\n  label: React.Node,\n}> = [\n  {\n    key: 'use-non-smoothed-textures',\n    label: <Trans>Using non smoothed textures</Trans>,\n  },\n  {\n    key: 'use-nearest-scale-mode',\n    label: <Trans>Using Nearest Scale Mode</Trans>,\n  },\n  {\n    key: 'maximum-fps-too-low',\n    label: <Trans>Maximum Fps is too low</Trans>,\n  },\n  {\n    key: 'minimum-fps-too-low',\n    label: <Trans>Minimum Fps is too low</Trans>,\n  },\n  {\n    key: 'function-extractor-explanation',\n    label: <Trans>Using function extractor</Trans>,\n  },\n  {\n    key: 'events-based-behavior-explanation',\n    label: <Trans>Using events based behavior</Trans>,\n  },\n  {\n    key: 'empty-events-based-behavior-explanation',\n    label: <Trans>Using empty events based behavior</Trans>,\n  },\n  {\n    key: 'too-much-effects',\n    label: <Trans>Using too much effects</Trans>,\n  },\n  {\n    key: 'effects-usage',\n    label: <Trans>Using effects</Trans>,\n  },\n  {\n    key: 'lighting-layer-usage',\n    label: <Trans>Using lighting layer</Trans>,\n  },\n  {\n    key: 'automatic-lighting-layer',\n    label: <Trans>Automatic creation of lighting layer</Trans>,\n  },\n  {\n    key: 'object-moved-in-lighting-layer',\n    label: <Trans>Light object automatically put in lighting layer</Trans>,\n  },\n  {\n    key: 'resource-properties-panel-explanation',\n    label: <Trans>Using the resource properties panel</Trans>,\n  },\n  {\n    key: 'instance-drag-n-drop-explanation',\n    label: <Trans>Using instance drag'n'drop</Trans>,\n  },\n  {\n    key: 'objects-panel-explanation',\n    label: <Trans>Using the objects panel</Trans>,\n  },\n  {\n    key: 'instance-properties-panel-explanation',\n    label: <Trans>Using the instance properties panel</Trans>,\n  },\n  {\n    key: 'layers-panel-explanation',\n    label: <Trans>Using the layers panel</Trans>,\n  },\n  {\n    key: 'instances-panel-explanation',\n    label: <Trans>Using the instances panel</Trans>,\n  },\n  {\n    key: 'physics2-shape-collisions',\n    label: <Trans>Collisions handling with the Physics engine</Trans>,\n  },\n  {\n    key: 'edit-instruction-explanation',\n    label: <Trans>How to edit instructions</Trans>,\n  },\n  {\n    key: 'lifecycle-events-function-included-only-if-extension-used',\n    label: <Trans>Lifecycle functions only included when extension used</Trans>,\n  },\n  {\n    key: 'p2p-broker-recommendation',\n    label: <Trans>Peer to peer broker server recommendation</Trans>,\n  },\n  {\n    key: 'command-palette-shortcut',\n    label: <Trans>Command palette keyboard shortcut</Trans>,\n  },\n  {\n    key: 'asset-installed-explanation',\n    label: (\n      <Trans>Explanation after an object is installed from the store</Trans>\n    ),\n  },\n  {\n    key: 'project-should-have-unique-package-name',\n    label: (\n      <Trans>Project package names should not begin with com.example</Trans>\n    ),\n  },\n];\n\n/**\n * All the preferences of GDevelop. To add a new preference, add it into this\n * type and add a setter into `Preferences` type. Then, update the\n * preference dialog.\n */\nexport type PreferencesValues = {|\n  language: string,\n  autoDownloadUpdates: boolean,\n  themeName: string,\n  codeEditorThemeName: string,\n  hiddenAlertMessages: { [AlertMessageIdentifier]: boolean },\n  hiddenTutorialHints: { [string]: boolean },\n  autoDisplayChangelog: boolean,\n  lastLaunchedVersion: ?string,\n  eventsSheetShowObjectThumbnails: boolean,\n  autosaveOnPreview: boolean,\n  useNewInstructionEditorDialog: boolean,\n  useUndefinedVariablesInAutocompletion: boolean,\n  useGDJSDevelopmentWatcher: boolean,\n  eventsSheetUseAssignmentOperators: boolean,\n  eventsSheetZoomLevel: number,\n  showEffectParameterNames: boolean,\n  projectLastUsedPaths: { [string]: { [ResourceKind]: string } },\n  defaultEditorMosaicNodes: { [EditorMosaicName]: ?EditorMosaicNode },\n  recentProjectFiles: Array<FileMetadataAndStorageProviderName>,\n  autoOpenMostRecentProject: boolean,\n  hasProjectOpened: boolean,\n  userShortcutMap: ShortcutMap,\n  newObjectDialogDefaultTab: 'asset-store' | 'new-object',\n  isMenuBarHiddenInPreview: boolean,\n  isAlwaysOnTopInPreview: boolean,\n  backdropClickBehavior: 'nothing' | 'apply' | 'cancel',\n  eventsSheetCancelInlineParameter: 'cancel' | 'apply',\n|};\n\n/**\n * Type containing all the preferences of GDevelop and their setters.\n */\nexport type Preferences = {|\n  values: PreferencesValues,\n  setLanguage: (language: string) => void,\n  setThemeName: (themeName: string) => void,\n  setCodeEditorThemeName: (codeEditorThemeName: string) => void,\n  setAutoDownloadUpdates: (enabled: boolean) => void,\n  checkUpdates: (forceDownload?: boolean) => void,\n  setAutoDisplayChangelog: (enabled: boolean) => void,\n  showAlertMessage: (identifier: AlertMessageIdentifier, show: boolean) => void,\n  showAllAlertMessages: () => void,\n  showTutorialHint: (identifier: string, show: boolean) => void,\n  showAllTutorialHints: () => void,\n  verifyIfIsNewVersion: () => boolean,\n  setEventsSheetShowObjectThumbnails: (enabled: boolean) => void,\n  setAutosaveOnPreview: (enabled: boolean) => void,\n  setUseNewInstructionEditorDialog: (enabled: boolean) => void,\n  setUseUndefinedVariablesInAutocompletion: (enabled: boolean) => void,\n  setUseGDJSDevelopmentWatcher: (enabled: boolean) => void,\n  setEventsSheetUseAssignmentOperators: (enabled: boolean) => void,\n  setEventsSheetZoomLevel: (zoomLevel: number) => void,\n  setShowEffectParameterNames: (enabled: boolean) => void,\n  getLastUsedPath: (project: gdProject, kind: ResourceKind) => string,\n  setLastUsedPath: (\n    project: gdProject,\n    kind: ResourceKind,\n    path: string\n  ) => void,\n  getDefaultEditorMosaicNode: (name: EditorMosaicName) => ?EditorMosaicNode,\n  setDefaultEditorMosaicNode: (\n    name: EditorMosaicName,\n    node: ?EditorMosaicNode\n  ) => void,\n  getRecentProjectFiles: () => Array<FileMetadataAndStorageProviderName>,\n  insertRecentProjectFile: (\n    fileMetadata: FileMetadataAndStorageProviderName\n  ) => void,\n  removeRecentProjectFile: (\n    fileMetadata: FileMetadataAndStorageProviderName\n  ) => void,\n  getAutoOpenMostRecentProject: () => boolean,\n  setAutoOpenMostRecentProject: (enabled: boolean) => void,\n  hadProjectOpenedDuringLastSession: () => boolean,\n  setHasProjectOpened: (enabled: boolean) => void,\n  resetShortcutsToDefault: () => void,\n  setShortcutForCommand: (commandName: CommandName, shortcut: string) => void,\n  getNewObjectDialogDefaultTab: () => 'asset-store' | 'new-object',\n  setNewObjectDialogDefaultTab: ('asset-store' | 'new-object') => void,\n  getIsMenuBarHiddenInPreview: () => boolean,\n  setIsMenuBarHiddenInPreview: (enabled: boolean) => void,\n  setBackdropClickBehavior: (value: string) => void,\n  getIsAlwaysOnTopInPreview: () => boolean,\n  setIsAlwaysOnTopInPreview: (enabled: boolean) => void,\n  setEventsSheetCancelInlineParameter: (value: string) => void,\n|};\n\nexport const initialPreferences = {\n  values: {\n    language: 'en',\n    autoDownloadUpdates: true,\n    themeName:\n      typeof window !== 'undefined' &&\n      window.matchMedia('(prefers-color-scheme: dark)').matches\n        ? 'Nord'\n        : 'GDevelop default',\n    codeEditorThemeName: 'vs-dark',\n    hiddenAlertMessages: {},\n    hiddenTutorialHints: {},\n    autoDisplayChangelog: true,\n    lastLaunchedVersion: undefined,\n    eventsSheetShowObjectThumbnails: true,\n    autosaveOnPreview: true,\n    useNewInstructionEditorDialog: true,\n    useUndefinedVariablesInAutocompletion: false,\n    useGDJSDevelopmentWatcher: true,\n    eventsSheetUseAssignmentOperators: false,\n    eventsSheetZoomLevel: 14,\n    showEffectParameterNames: false,\n    projectLastUsedPaths: {},\n    defaultEditorMosaicNodes: {},\n    recentProjectFiles: [],\n    autoOpenMostRecentProject: true,\n    hasProjectOpened: false,\n    userShortcutMap: {},\n    newObjectDialogDefaultTab: electron ? 'new-object' : 'asset-store',\n    isMenuBarHiddenInPreview: true,\n    isAlwaysOnTopInPreview: false,\n    backdropClickBehavior: 'nothing',\n    eventsSheetCancelInlineParameter: 'apply',\n  },\n  setLanguage: () => {},\n  setThemeName: () => {},\n  setCodeEditorThemeName: () => {},\n  setAutoDownloadUpdates: () => {},\n  checkUpdates: () => {},\n  setAutoDisplayChangelog: () => {},\n  showAlertMessage: (identifier: AlertMessageIdentifier, show: boolean) => {},\n  showAllAlertMessages: () => {},\n  showTutorialHint: (identifier: string, show: boolean) => {},\n  showAllTutorialHints: () => {},\n  verifyIfIsNewVersion: () => false,\n  setEventsSheetShowObjectThumbnails: () => {},\n  setAutosaveOnPreview: () => {},\n  setUseNewInstructionEditorDialog: (enabled: boolean) => {},\n  setUseUndefinedVariablesInAutocompletion: (enabled: boolean) => {},\n  setUseGDJSDevelopmentWatcher: (enabled: boolean) => {},\n  setEventsSheetUseAssignmentOperators: (enabled: boolean) => {},\n  setEventsSheetZoomLevel: (zoomLevel: number) => {},\n  setShowEffectParameterNames: (enabled: boolean) => {},\n  getLastUsedPath: (project: gdProject, kind: ResourceKind) => '',\n  setLastUsedPath: (project: gdProject, kind: ResourceKind, path: string) => {},\n  getDefaultEditorMosaicNode: (name: EditorMosaicName) => null,\n  setDefaultEditorMosaicNode: (\n    name: EditorMosaicName,\n    node: ?EditorMosaicNode\n  ) => {},\n  getRecentProjectFiles: () => [],\n  insertRecentProjectFile: (\n    fileMetadata: FileMetadataAndStorageProviderName\n  ) => {},\n  removeRecentProjectFile: (\n    fileMetadata: FileMetadataAndStorageProviderName\n  ) => {},\n  getAutoOpenMostRecentProject: () => true,\n  setAutoOpenMostRecentProject: () => {},\n  hadProjectOpenedDuringLastSession: () => false,\n  setHasProjectOpened: () => {},\n  resetShortcutsToDefault: () => {},\n  setShortcutForCommand: (commandName: CommandName, shortcut: string) => {},\n  getNewObjectDialogDefaultTab: () => 'asset-store',\n  setNewObjectDialogDefaultTab: () => {},\n  getIsMenuBarHiddenInPreview: () => true,\n  setIsMenuBarHiddenInPreview: () => {},\n  setBackdropClickBehavior: () => {},\n  getIsAlwaysOnTopInPreview: () => true,\n  setIsAlwaysOnTopInPreview: () => {},\n  setEventsSheetCancelInlineParameter: () => {},\n};\n\nconst PreferencesContext = React.createContext<Preferences>(initialPreferences);\n\nexport default PreferencesContext;\n","// @flow\n// This file is generated by make-version-metadata.js script\n// Don't import this file directly, prefer to use newIDE/app/src/Version/index.js instead.\n// prettier-ignore\nmodule.exports = {\n  \"version\": \"5.0.127\",\n  \"gitHash\": \"03a9d9f9c83dae95af5632b27372385b9036f64d\",\n  \"versionWithHash\": \"5.0.127-03a9d9f9c83dae95af5632b27372385b9036f64d\"\n};\n","// @flow\nimport Keen from 'keen-tracking';\nimport userflow from 'userflow.js';\nimport Window from '../Window';\nimport { getUserUUID } from './UserUUID';\nimport Authentication from '../GDevelopServices/Authentication';\nimport {\n  getProgramOpeningCount,\n  incrementProgramOpeningCount,\n} from './LocalStats';\nimport { getStartupTimesSummary } from '../StartupTimes';\nimport { getIDEVersion, getIDEVersionWithHash } from '../../Version';\nimport optionalRequire from '../OptionalRequire';\nimport { loadPreferencesFromLocalStorage } from '../../MainFrame/Preferences/PreferencesProvider';\nimport { isMobile } from '../Platform';\n\nconst electron = optionalRequire('electron');\n\nconst isDev = Window.isDev();\nlet client = null;\nlet startupTimesSummary = null;\nexport let isUserflowRunning = false;\n\nexport const installAnalyticsEvents = (authentication: Authentication) => {\n  // Activate userflow onboarding only on a portion of new users on web app on desktop.\n  if (\n    !electron &&\n    getProgramOpeningCount() <= 1 &&\n    !isMobile() &&\n    Math.random() < 0.1\n  ) {\n    if (isDev) {\n      userflow.init('ct_y5qogyfo6zbahjejcbo3dybnta');\n    } else {\n      userflow.init('ct_paaz6o2t2bhlrlyi7a3toojn7e');\n    }\n    userflow.on(\n      // Undocumented legacy userflow event that is fired\n      // \"when a flow either becomes active or removed\"\n      // (tip given by a tech member of Userflow - it shouldn't be removed\n      // in the near future given the fact that some of their users still use it).\n      'flowvisibilitychange',\n      isRunning => (isUserflowRunning = isRunning)\n    );\n    const userPreferences = loadPreferencesFromLocalStorage();\n    const userLanguage = userPreferences ? userPreferences.language : undefined;\n    userflow.identify(getUserUUID(), { language: userLanguage });\n  }\n  if (isDev) {\n    console.info('Development build - Analytics disabled');\n    return;\n  }\n\n  const version = getIDEVersion();\n  const versionWithHash = getIDEVersionWithHash();\n\n  const sessionCookie = Keen.utils.cookie('visitor-stats');\n  const sessionTimer = Keen.utils.timer();\n  sessionTimer.start();\n\n  client = new Keen({\n    projectId: '593d9f0595cfc907a1f8126a',\n    writeKey:\n      'B917F1DB50EE4C8949DBB374D2962845A22838B425AA43322A37138691A5270EB0358AEE45A4F61AFA7713B9765B4980517A1E276D4973A2E546EA851BF7757523706367ED430C041D2728A63BF61B5D1B2079C75E455DDDFAAC4324128AC2DB',\n  });\n\n  client.extendEvents(function() {\n    // Include the user public profile.\n    const firebaseUser = authentication.getFirebaseUserSync();\n\n    // Compute the startup times (only once to avoid doing this for every event).\n    startupTimesSummary = startupTimesSummary || getStartupTimesSummary();\n\n    return {\n      user: {\n        uuid: getUserUUID(),\n        uid: firebaseUser ? firebaseUser.uid : undefined,\n        providerId: firebaseUser ? firebaseUser.providerId : undefined,\n        email: firebaseUser ? firebaseUser.email : undefined,\n        emailVerified: firebaseUser ? firebaseUser.emailVerified : undefined,\n      },\n      localStats: {\n        programOpeningCount: getProgramOpeningCount(),\n      },\n      versionMetadata: {\n        version,\n        versionWithHash,\n      },\n      startupTimesSummary,\n      page: {\n        title: document.title,\n        url: document.location.href,\n        // info: {} (add-on)\n      },\n      referrer: {\n        url: document.referrer,\n        // info: {} (add-on)\n      },\n      tech: {\n        browser: Keen.helpers.getBrowserProfile(),\n        // info: {} (add-on)\n        ip: '${keen.ip}', // eslint-disable-line\n        ua: '${keen.user_agent}', // eslint-disable-line\n      },\n      time: Keen.helpers.getDatetimeIndex(),\n      visitor: {\n        id: sessionCookie.get('user_id'),\n        time_on_page: sessionTimer.value(),\n      },\n      // geo: {} (add-on)\n      keen: {\n        timestamp: new Date().toISOString(),\n        addons: [\n          {\n            name: 'keen:ip_to_geo',\n            input: {\n              ip: 'tech.ip',\n            },\n            output: 'geo',\n          },\n          {\n            name: 'keen:ua_parser',\n            input: {\n              ua_string: 'tech.ua',\n            },\n            output: 'tech.info',\n          },\n          {\n            name: 'keen:url_parser',\n            input: {\n              url: 'page.url',\n            },\n            output: 'page.info',\n          },\n          {\n            name: 'keen:referrer_parser',\n            input: {\n              page_url: 'page.url',\n              referrer_url: 'referrer.url',\n            },\n            output: 'referrer.info',\n          },\n        ],\n      },\n    };\n  });\n};\n\nexport const sendProgramOpening = () => {\n  if (isDev || !client) return;\n\n  incrementProgramOpeningCount();\n  client.recordEvent('program_opening');\n};\n\nexport const sendExportLaunched = (exportKind: string) => {\n  if (isDev || !client) return;\n\n  client.recordEvent('export_launched', {\n    platform: 'GDevelop JS Platform', // Hardcoded here for now\n    exportKind,\n  });\n};\n\nexport const sendNewGameCreated = (templateName: string) => {\n  if (isDev || !client) return;\n\n  client.recordEvent('new_game_creation', {\n    platform: 'GDevelop JS Platform', // Hardcoded here for now\n    templateName,\n  });\n};\n\nexport const sendTutorialOpened = (tutorialName: string) => {\n  if (isDev || !client) return;\n\n  client.recordEvent('tutorial_opened', {\n    tutorialName,\n  });\n};\n\nexport const sendHelpFinderOpened = () => {\n  if (isDev || !client) return;\n\n  client.recordEvent('help_finder_opened', {});\n};\n\nexport const sendHelpSearch = (searchText: string) => {\n  if (isDev || !client) return;\n\n  client.recordEvent('help_search', {\n    searchText,\n  });\n};\n\nexport const sendErrorMessage = (\n  message: string,\n  type: 'error' | 'error-boundary',\n  rawError: any,\n  errorId: string\n) => {\n  if (isDev || !client) return;\n\n  client.recordEvent('error_message', {\n    message,\n    type,\n    rawError,\n    errorId,\n  });\n};\n\nexport const sendSignupDone = (email: string) => {\n  if (isDev || !client) return;\n\n  client.recordEvent('signup', {\n    email,\n  });\n};\n\nexport const sendSubscriptionCheckDialogShown = ({\n  mode,\n  id,\n}: {|\n  mode: string,\n  id: string,\n|}) => {\n  if (isDev || !client) return;\n\n  client.recordEvent('subscription-check-dialog-shown', {\n    mode,\n    title: id,\n  });\n};\n\nexport const sendSubscriptionCheckDismiss = () => {\n  if (isDev || !client) return;\n\n  client.recordEvent('subscription-check-dialog-dismiss');\n};\n\nexport const sendSubscriptionDialogShown = () => {\n  if (isDev || !client) return;\n\n  client.recordEvent('subscription-dialog-shown', {});\n};\n\nexport const sendAssetOpened = ({\n  id,\n  name,\n}: {|\n  id: string,\n  name: string,\n|}) => {\n  if (isDev || !client) return;\n\n  client.recordEvent('asset-opened', { id, name });\n};\n\nexport const sendAssetAddedToProject = ({\n  id,\n  name,\n}: {|\n  id: string,\n  name: string,\n|}) => {\n  if (isDev || !client) return;\n\n  client.recordEvent('asset-added-to-project', { id, name });\n};\n\nexport const sendNewObjectCreated = (name: string) => {\n  if (isDev || !client) return;\n\n  client.recordEvent('new-object-created', { name });\n};\n\nexport const sendShowcaseGameLinkOpened = (title: string, linkType: string) => {\n  if (isDev || !client) return;\n\n  client.recordEvent('showcase-open-game-link', { title, linkType });\n};\n\nexport const sendChoosePlanClicked = (planId: string | null) => {\n  if (isDev || !client) return;\n\n  client.recordEvent('choose-plan-click', { planId });\n};\n\nexport const sendExternalEditorOpened = (editorName: string) => {\n  if (isDev || !client) return;\n\n  client.recordEvent('open_external_editor', { editorName });\n};\n\nconst trackInAppTutorialProgress = (\n  stepIndex: number,\n  isCompleted: boolean = false\n) => {\n  if (isDev || !client) return;\n\n  client.recordEvent('user-flow-onboarding', { stepIndex, isCompleted });\n};\n\n// Make this function global so it can be accessed from userflow's\n// step \"Evaluate JS\" actions\nglobal.trackInAppTutorialProgress = trackInAppTutorialProgress;\n","// See https://gist.github.com/jed/982883\nconst generateUUID = a => {\n  return a\n    ? // eslint-disable-next-line\n      (a ^ ((Math.random() * 16) >> (a / 4))).toString(16)\n    : ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, generateUUID);\n};\n\nconst localStorageKey = 'gd-user-uuid';\n\nexport const getUserUUID = () => {\n  try {\n    const existingUserUUID = localStorage.getItem(localStorageKey);\n    if (existingUserUUID) return existingUserUUID;\n  } catch (e) {\n    console.warn('Unable to load stored user UUID', e);\n  }\n\n  const newUserUUID = generateUUID();\n  try {\n    localStorage.setItem(localStorageKey, newUserUUID);\n  } catch (e) {\n    console.warn('Unable to save user UUID', e);\n  }\n  return newUserUUID;\n};\n","// @flow\n\nimport Window from '../../Utils/Window';\nimport { sendErrorMessage } from '../../Utils/Analytics/EventSender';\n\nexport const showMessageBox = (message: string) => {\n  Window.showMessageBox(message, 'info');\n};\n\ntype WarningOptions = {|\n  /**\n   * Delay the display of the warning to the next tick, not blocking the current function\n   * execution. This can be useful to work around freezing issues on Linux.\n   */\n  delayToNextTick: boolean,\n|};\n\nexport const showWarningBox = (message: string, options?: WarningOptions) => {\n  if (options && options.delayToNextTick) {\n    setTimeout(() => {\n      Window.showMessageBox(message, 'warning');\n    });\n  } else {\n    Window.showMessageBox(message, 'warning');\n  }\n};\n\ntype ErrorArgs = {|\n  message: string,\n  rawError: ?Error | Object,\n  errorId: string,\n  doNotReport?: boolean,\n|};\n\nexport const showErrorBox = ({\n  message,\n  rawError,\n  errorId,\n  doNotReport,\n}: ErrorArgs) => {\n  Window.showMessageBox(message, 'error');\n  if (!doNotReport) {\n    sendErrorMessage(message, 'error', rawError, errorId);\n  }\n  console.error(`${errorId}: \"${message}\". Raw error:`, rawError);\n};\n","// @flow\nimport optionalRequire from './OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst process = optionalRequire('process');\n\nlet _isWindows = false;\nif (electron) {\n  _isWindows = electron.remote.require('electron-is').windows();\n}\nconst _isMacLike =\n  typeof navigator !== 'undefined' &&\n  navigator.platform.match(/(Mac|iPhone|iPod|iPad)/i)\n    ? true\n    : false;\n\nconst _isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n  typeof navigator !== 'undefined' ? navigator.userAgent : ''\n);\n\nexport const getUserAgent = (): string => {\n  return typeof navigator !== 'undefined'\n    ? navigator.userAgent || 'Unknown navigator'\n    : 'Unknown (not a navigator)';\n};\n\nexport const getArch = (): string => {\n  return process\n    ? process.arch || 'Unknown architecture'\n    : 'Unknown architecture (web-app)';\n};\n\nexport const getSystemVersion = (): string => {\n  return process && process.getSystemVersion\n    ? process.getSystemVersion() || 'Unknown system version'\n    : 'Unknown system version (web-app)';\n};\n\nexport const getPlatformName = (): string => {\n  return process\n    ? process.platform || 'Unknown platform'\n    : (typeof navigator !== 'undefined' ? navigator.platform : '') ||\n        'Unknown platform (web-app)';\n};\n\nexport const isWindows = () => _isWindows;\nexport const isMacLike = () => _isMacLike;\nexport const isMobile = () => _isMobile;\n","// @flow\nconst localStoragePrefix = 'gd-local-stats';\n\nexport const getProgramOpeningCount = (): number => {\n  try {\n    const count = localStorage.getItem(`${localStoragePrefix}-program-opening`);\n    if (count !== null) return parseInt(count, 10);\n  } catch (e) {\n    console.warn('Unable to load stored program opening count', e);\n  }\n\n  return 0;\n};\n\nexport const incrementProgramOpeningCount = () => {\n  const count = getProgramOpeningCount() + 1;\n\n  try {\n    localStorage.setItem(`${localStoragePrefix}-program-opening`, '' + count);\n  } catch (e) {\n    console.warn('Unable to store program opening count', e);\n  }\n};\n","// @flow\nimport { initializeApp } from 'firebase/app';\nimport {\n  Auth,\n  getAuth,\n  onAuthStateChanged,\n  User as FirebaseUser,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  sendPasswordResetEmail,\n  signOut,\n  sendEmailVerification,\n  updateEmail,\n} from 'firebase/auth';\nimport { GDevelopFirebaseConfig, GDevelopUserApi } from './ApiConfigs';\nimport axios from 'axios';\nimport { showErrorBox } from '../../UI/Messages/MessageBox';\n\nexport type Profile = {|\n  id: string,\n  email: string,\n  username: ?string,\n  description: ?string,\n  getGameStatsEmail: boolean,\n|};\n\nexport type LoginForm = {|\n  email: string,\n  password: string,\n|};\n\nexport type RegisterForm = {|\n  email: string,\n  password: string,\n  username: string,\n|};\n\nexport type EditForm = {|\n  username: string,\n  description: string,\n  getGameStatsEmail: boolean,\n|};\n\nexport type ChangeEmailForm = {|\n  email: string,\n|};\n\nexport type AuthError = {\n  code:\n    | 'auth/invalid-email'\n    | 'auth/user-disabled'\n    | 'auth/user-not-found'\n    | 'auth/wrong-password'\n    | 'auth/email-already-in-use'\n    | 'auth/operation-not-allowed'\n    | 'auth/weak-password'\n    | 'auth/username-used'\n    | 'auth/malformed-username'\n    | 'auth/requires-recent-login'\n    | 'auth/too-many-requests',\n};\n\nexport default class Authentication {\n  auth: Auth;\n  _onUserLogoutCallback: ?() => void | Promise<void> = null;\n  _onUserUpdateCallback: ?() => void | Promise<void> = null;\n\n  constructor() {\n    const app = initializeApp(GDevelopFirebaseConfig);\n    this.auth = getAuth(app);\n    onAuthStateChanged(this.auth, user => {\n      if (user) {\n        // User has logged in or changed.\n        if (this._onUserUpdateCallback) this._onUserUpdateCallback();\n      } else {\n        // User has logged out.\n        if (this._onUserLogoutCallback) this._onUserLogoutCallback();\n      }\n    });\n  }\n\n  setOnUserLogoutCallback = (cb: () => void | Promise<void>) => {\n    this._onUserLogoutCallback = cb;\n  };\n\n  setOnUserUpdateCallback = (cb: () => void | Promise<void>) => {\n    this._onUserUpdateCallback = cb;\n  };\n\n  createFirebaseAccount = (form: RegisterForm): Promise<void> => {\n    return createUserWithEmailAndPassword(this.auth, form.email, form.password)\n      .then(userCredentials => {\n        // The user is now stored in `this.auth`.\n        sendEmailVerification(userCredentials.user);\n      })\n      .catch(error => {\n        console.error('Error while creating firebase account:', error);\n        throw error;\n      });\n  };\n\n  createUser = (\n    getAuthorizationHeader: () => Promise<string>,\n    form: RegisterForm\n  ): Promise<void> => {\n    return getAuthorizationHeader()\n      .then(authorizationHeader => {\n        const { currentUser } = this.auth;\n        if (!currentUser) {\n          console.error(\n            'Cannot create the user as it is not logged in any more.'\n          );\n          throw new Error(\n            'Cannot create the user as it is not logged in any more.'\n          );\n        }\n        return axios.post(\n          `${GDevelopUserApi.baseUrl}/user`,\n          {\n            id: currentUser.uid,\n            email: form.email,\n            username: form.username,\n          },\n          {\n            params: {\n              userId: currentUser.uid,\n            },\n            headers: {\n              Authorization: authorizationHeader,\n            },\n          }\n        );\n      })\n      .then(() => {\n        // User successfully created\n      })\n      .catch(error => {\n        console.error('Error while creating user:', error);\n        throw error;\n      });\n  };\n\n  login = (form: LoginForm): Promise<void> => {\n    return signInWithEmailAndPassword(this.auth, form.email, form.password)\n      .then(userCredentials => {\n        // The user is now stored in `this.auth`.\n      })\n      .catch(error => {\n        console.error('Error while login:', error);\n        throw error;\n      });\n  };\n\n  forgotPassword = (form: LoginForm): Promise<void> => {\n    return sendPasswordResetEmail(this.auth, form.email);\n  };\n\n  getFirebaseUser = async (): Promise<?FirebaseUser> => {\n    const { currentUser } = this.auth;\n    if (!currentUser) {\n      return null;\n    }\n\n    // In order to fetch the latest firebaseUser properties (like emailVerified)\n    // we have to call the reload method.\n    await currentUser.reload();\n    return this.auth.currentUser;\n  };\n\n  sendFirebaseEmailVerification = async (): Promise<void> => {\n    {\n      const { currentUser } = this.auth;\n      if (!currentUser)\n        throw new Error(\n          'Tried to send verification email while not authenticated.'\n        );\n\n      await currentUser.reload();\n    }\n    const { currentUser } = this.auth;\n    if (!currentUser || currentUser.emailVerified) return;\n\n    try {\n      sendEmailVerification(currentUser);\n    } catch (error) {\n      showErrorBox({\n        message:\n          'An email has been sent recently, check your inbox or please try again later.',\n        rawError: error,\n        errorId: 'email-verification-send-error',\n      });\n    }\n  };\n\n  changeEmail = async (\n    getAuthorizationHeader: () => Promise<string>,\n    form: ChangeEmailForm\n  ) => {\n    const { currentUser } = this.auth;\n    if (!currentUser)\n      throw new Error('Tried to change email while not authenticated.');\n\n    return updateEmail(currentUser, form.email)\n      .then(() => sendEmailVerification(currentUser))\n      .then(() => {\n        console.log('Email successfully changed in Firebase.');\n        return getAuthorizationHeader();\n      })\n      .then(authorizationHeader => {\n        return axios.patch(\n          `${GDevelopUserApi.baseUrl}/user/${currentUser.uid}`,\n          {\n            email: form.email,\n          },\n          {\n            params: {\n              userId: currentUser.uid,\n            },\n            headers: {\n              Authorization: authorizationHeader,\n            },\n          }\n        );\n      })\n      .then(() => {\n        console.log('Email successfully changed in the GDevelop services.');\n      })\n      .catch(error => {\n        console.error('An error happened during email change.', error);\n        throw error;\n      });\n  };\n\n  getUserProfile = async (getAuthorizationHeader: () => Promise<string>) => {\n    const { currentUser } = this.auth;\n    if (!currentUser)\n      throw new Error('Tried to get user profile while not authenticated.');\n\n    return getAuthorizationHeader()\n      .then(authorizationHeader => {\n        return axios.get(`${GDevelopUserApi.baseUrl}/user/${currentUser.uid}`, {\n          params: {\n            userId: currentUser.uid,\n          },\n          headers: {\n            Authorization: authorizationHeader,\n          },\n        });\n      })\n      .then(response => response.data)\n      .catch(error => {\n        console.error('Error while fetching user:', error);\n        throw error;\n      });\n  };\n\n  editUserProfile = async (\n    getAuthorizationHeader: () => Promise<string>,\n    form: EditForm\n  ) => {\n    const { currentUser } = this.auth;\n    if (!currentUser)\n      throw new Error('Tried to edit user profile while not authenticated.');\n\n    return getAuthorizationHeader()\n      .then(authorizationHeader => {\n        const { username, description, getGameStatsEmail } = form;\n        return axios.patch(\n          `${GDevelopUserApi.baseUrl}/user/${currentUser.uid}`,\n          {\n            username,\n            description,\n            getGameStatsEmail,\n          },\n          {\n            params: {\n              userId: currentUser.uid,\n            },\n            headers: {\n              Authorization: authorizationHeader,\n            },\n          }\n        );\n      })\n      .then(response => response.data)\n      .catch(error => {\n        console.error('Error while editing user:', error);\n        throw error;\n      });\n  };\n\n  acceptGameStatsEmail = async (\n    getAuthorizationHeader: () => Promise<string>\n  ) => {\n    const { currentUser } = this.auth;\n    if (!currentUser)\n      throw new Error(\n        'Tried to accept game stats email while not authenticated.'\n      );\n\n    return getAuthorizationHeader()\n      .then(authorizationHeader => {\n        return axios.patch(\n          `${GDevelopUserApi.baseUrl}/user/${currentUser.uid}`,\n          { getGameStatsEmail: true },\n          {\n            params: { userId: currentUser.uid },\n            headers: { Authorization: authorizationHeader },\n          }\n        );\n      })\n      .then(response => response.data)\n      .catch(error => {\n        console.error('Error while accepting game stats email:', error);\n        throw error;\n      });\n  };\n\n  getFirebaseUserSync = (): ?FirebaseUser => {\n    return this.auth.currentUser || null;\n  };\n\n  logout = () => {\n    signOut(this.auth)\n      .then(() => {\n        console.log('Logout successful.');\n      })\n      .catch(error => {\n        console.error('An error happened during logout.', error);\n        throw error;\n      });\n  };\n\n  getAuthorizationHeader = async (): Promise<string> => {\n    const { currentUser } = this.auth;\n    if (!currentUser) throw new Error('User is not authenticated.');\n\n    return currentUser.getIdToken().then(token => `Bearer ${token}`);\n  };\n\n  isAuthenticated = (): boolean => {\n    return !!this.auth.currentUser;\n  };\n}\n","// @flow\nimport { type CommandName } from '../CommandPalette/CommandsList';\n\nexport type ShortcutMap = { [CommandName]: string };\n\nconst defaultShortcuts: ShortcutMap = {\n  QUIT_APP: 'CmdOrCtrl+Shift+KeyQ',\n  OPEN_PROJECT_MANAGER: 'CmdOrCtrl+Alt+KeyE',\n  LAUNCH_NEW_PREVIEW: 'F4',\n  LAUNCH_DEBUG_PREVIEW: 'F6',\n  HOT_RELOAD_PREVIEW: 'F5',\n  LAUNCH_NETWORK_PREVIEW: 'F8',\n  OPEN_HOME_PAGE: '',\n  CREATE_NEW_PROJECT: 'CmdOrCtrl+Alt+KeyN',\n  OPEN_PROJECT: 'CmdOrCtrl+KeyO',\n  SAVE_PROJECT: 'CmdOrCtrl+KeyS',\n  SAVE_PROJECT_AS: 'CmdOrCtrl+Shift+KeyS',\n  CLOSE_PROJECT: 'CmdOrCtrl+KeyQ',\n  EXPORT_GAME: 'CmdOrCtrl+Shift+KeyE',\n  OPEN_RECENT_PROJECT: '',\n  OPEN_COMMAND_PALETTE: 'CmdOrCtrl+KeyP',\n\n  OPEN_PROJECT_PROPERTIES: '',\n  OPEN_PROJECT_LOADING_SCREEN: '',\n  OPEN_PROJECT_VARIABLES: '',\n  OPEN_PLATFORM_SPECIFIC_ASSETS_DIALOG: '',\n  OPEN_PROJECT_RESOURCES: '',\n\n  OPEN_LAYOUT: 'Alt+KeyS',\n  OPEN_EXTERNAL_EVENTS: 'Alt+KeyV',\n  OPEN_EXTERNAL_LAYOUT: 'Alt+KeyW',\n  OPEN_EXTENSION: 'Alt+KeyE',\n\n  OPEN_SCENE_PROPERTIES: 'KeyS',\n  OPEN_SCENE_VARIABLES: 'KeyV',\n\n  OPEN_OBJECTS_PANEL: 'KeyO',\n  OPEN_OBJECT_GROUPS_PANEL: 'KeyG',\n  OPEN_PROPERTIES_PANEL: 'KeyP',\n  TOGGLE_INSTANCES_PANEL: 'KeyI',\n  TOGGLE_LAYERS_PANEL: 'KeyL',\n  TOGGLE_WINDOW_MASK: 'KeyM',\n  TOGGLE_GRID: 'Alt+KeyG',\n  OPEN_SETUP_GRID: 'CmdOrCtrl+Shift+KeyG',\n  EDIT_LAYER_EFFECTS: 'KeyE',\n  EDIT_LAYER: 'KeyT',\n  EDIT_OBJECT: 'Shift+KeyE',\n  EDIT_OBJECT_VARIABLES: 'Shift+KeyV',\n  EDIT_OBJECT_GROUP: 'Shift+KeyG',\n\n  ADD_STANDARD_EVENT: 'Shift+KeyA',\n  ADD_SUBEVENT: 'Shift+KeyD',\n  ADD_COMMENT_EVENT: '',\n  CHOOSE_AND_ADD_EVENT: 'Shift+KeyW',\n  OPEN_EXTENSION_SETTINGS: '',\n};\n\nexport default defaultShortcuts;\n","// @flow\n\n/**\n * Load a script from the specified source. The returned promise\n * resolves when the script is loaded.\n * @param source The script source\n */\nexport const loadScript = (source: string): Promise<void> => {\n  return new Promise((resolve, reject) => {\n    if (typeof document === 'undefined') {\n      reject(\n        new Error('loadScript is only supported in a browser environment.')\n      );\n      return;\n    }\n\n    const { body } = document;\n    if (!body) {\n      reject(\n        new Error('loadScript is only supported in a browser environment.')\n      );\n      return;\n    }\n\n    const scriptElement = document.createElement('script');\n    scriptElement.type = 'text/javascript';\n    scriptElement.src = source;\n    scriptElement.onload = () => resolve();\n    scriptElement.onerror = error => reject(error);\n    scriptElement.onabort = error => reject(error);\n\n    body.appendChild(scriptElement);\n  });\n};\n"],"sourceRoot":""}